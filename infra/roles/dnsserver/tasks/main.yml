---
- name: "DNS | Ensure command-not-found package is removed"
  apt:
    name: command-not-found
    state: absent

- name: "DNS | Update available package cache"
  apt:
    update_cache: yes
    cache_valid_time: 3600

- name: "DNS | Ensure docker is installed"
  apt:
    name: docker.io
    state: present

- name: "DNS | Ensure docker image source directory exists"
  file:
    path: /usr/local/src/docker-dnsmasq
    state: directory
    mode: '0755'

- name: "DNS | Set up dnsmasq docker image sources"
  copy:
    src: docker-dnsmasq/
    dest: /usr/local/src/docker-dnsmasq/
  register: image_sources

- name: "DNS | Get latest existing docker image id"
  command: 'docker images --format {% raw %}"{{.ID}}"{% endraw %} --no-trunc snadcat/docker-dnsmasq:latest'
  register: image_existing
  changed_when: image_existing.rc != 0

- name: "DNS | Build docker image"
  command:
    cmd: 'docker build -q -t sandcat/docker-dnsmasq:latest .'
    chdir: /usr/local/src/docker-dnsmasq
  when: image_sources.changed or image_existing.changed
  notify: "DNS | Restart dnsmasq service"

- name: "DNS | Ensure /etc/dnsmasq configuration directory exists"
  file:
    path: /etc/dnsmasq/hosts
    state: directory
    mode: '0755'

- name: "DNS | Ensure /etc/dnsmasq/dnsmasq.conf exists"
  copy:
    src: dnsmasq.conf
    dest: /etc/dnsmasq/dnsmasq.conf
  notify: "DNS | Restart dnsmasq service"

- name: "DNS | Ensure static hosts are correct"
  copy:
    src: hosts/
    dest: /etc/dnsmasq/hosts/

- name: "DNS | Ensure dnsmasq systemd service is installed"
  copy:
    src: home-dnsmasq.service
    dest: /etc/systemd/system/home-dnsmasq.service
  register: dnsmasq_service_installation

- name: "DNS | Reload systemd config after service installation"
  systemd:
    daemon_reload: yes
  when: dnsmasq_service_installation.changed

- name: "DNS | Ensure dnsmasq systemd service started and enabled"
  systemd:
    service: home-dnsmasq.service
    enabled: yes
    state: started

